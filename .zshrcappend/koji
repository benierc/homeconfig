function iotpkgclonebuildf28() {
    cd ~/work/koji/pkgs
    if [ ! -d $1 ]; then
        iotpkg clone $1
    fi
    cd $1
    shift
    git reset --hard
    git checkout f28
    echo "iotpkg build --target=rawhide $*"
    iotpkg build --nowait --target=rawhide $*
}

function patchgitpkg() {
    common="$HOME/work/koji/pkgs/common"
    pushd $common
    git pull
    popd
    pkgname=$(basename $(pwd))
    pkgcommon=$common/$pkgname
    if [ ! -d $pkgcommon ]; then
        mkdir $pkgcommon
    fi
    git diff > $pkgcommon/$1
    pushd $pkgcommon
    git add $1
    git commit -s
    git push
    popd
}

export KOJITAGPREFIX="0_RedPesk_HH"

function kojiaddpkg {
	koji add-pkg ${KOJITAGPREFIX}-release  $1 --owner=clement
}

function kojidistrepo {
	koji dist-repo ${KOJITAGPREFIX}-release --allow-missing-signatures
}

alias kojif='koji -c ~/.kojif/config-clement'
alias kojidn='koji -c ~/.kojidn/config'

function kojidn_importrpmstag {
	local buildids=
	local newer=
	local pkgname=
	local buildids=$(kojidn import --create-build *.rpm | grep "Creating empty build" | awk '{print $4}')
	for buildid in $buildids; do
		echo $buildid
		[ "$newer" ] || newer=$buildid
		rpmdev-vercmp $newer $buildid &> /dev/null
		res=$?
		[ $res -eq 11 ] || newer=$buildid
	done
	local pkgname=$(echo $newer | sed -r "s/-[^-]+-[^-]+$//")
	echo "newer is $newer pkgname=$pkgname"
	kojidn add-pkg --owner=clement $1 $pkgname
	kojidn tag-build --nowait $1 $newer
}

function kojidn_reset {
	local build=$(echo $1 | sed -r 's/\.(x86_64|aarch64|noarch)\.rpm$//')
	local buildid=$(kojidn  call --json getBuild $build | jq -r '.build_id')
	kojidn call resetBuild $buildid
}

function kojidn_cancel {
	local reg=$1
	to_cancel=
	for i in $(kojidn -q list-tasks | grep "$reg"| awk '{print $1}'); do
		to_cancel="$to_cancel $i"
	done
	[ "$to_cancel" ] && kojidn cancel $to_cancel
}

function kojidn_taginfo {
	kojidn taginfo $(kojidn -q list-tags | grep "$1" | fzf)
}

function kojidn_regenrepo {
	kojidn regen-repo $(kojidn -q list-tags | grep "$1" | fzf)
}

function kojidn_searchtags {
	kojidn -q list-tags | grep "$1" | fzf
}

function kojidn_cancellist {
	kojidn cancel $(kojidn -q list-tasks | grep "$1" | fzf | awk '{print $1}')
}

function entermockhub {
	local builder=$1
	local mockname=$(basename $2)
	local sshdomain=root@distro-prod02-builder-1$builder
	set -x
	ssh $sshdomain runuser -u kojibuilder -- mock -r koji/$mockname install vim
	ssh -t $sshdomain runuser -u kojibuilder -- mock -r koji/$mockname --shell
}
